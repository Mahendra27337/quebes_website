# Generated by Django 5.0 on 2025-08-20 12:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('banner', 'Banner'), ('video', 'Video')], max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='banners/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('screen', models.CharField(choices=[('home', 'Home Screen'), ('interstitial', 'Interstitial Offer Wall'), ('leaderboard_footer', 'Referral Leaderboard Footer'), ('subscription', 'Subscription Screen'), ('wallet_top', 'Wallet Top Bar')], max_length=50)),
                ('placement_zone', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('link_url', models.URLField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('priority_ranking', models.IntegerField()),
                ('time_of_day', models.TimeField(blank=True, null=True)),
                ('banner_type', models.CharField(max_length=100)),
                ('banner_tag', models.CharField(max_length=100)),
                ('user_level', models.IntegerField()),
                ('geo_targeting', models.TextField(blank=True, null=True)),
                ('user_targeting_tags', models.TextField(blank=True, null=True)),
                ('platform_type', models.CharField(max_length=100)),
                ('vendor_name', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=100)),
                ('ad_type', models.CharField(blank=True, max_length=100, null=True)),
                ('ad_payout_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('information', models.TextField()),
                ('offer_type', models.CharField(max_length=100)),
                ('offer_title', models.CharField(max_length=100)),
                ('required_users', models.PositiveIntegerField()),
                ('available_to_level1', models.BooleanField(default=False)),
                ('offer_eligibility_logic', models.TextField()),
                ('user_tracking_logic', models.TextField()),
                ('max_users', models.PositiveIntegerField()),
                ('reward_type', models.CharField(choices=[('gift_card', 'Gift Card'), ('quebes', 'Quebes'), ('coupon', 'Coupon'), ('voucher', 'Voucher'), ('product', 'Product')], max_length=50)),
                ('reward_payout', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gift_card_details', models.TextField(blank=True, null=True)),
                ('coupon_details', models.TextField(blank=True, null=True)),
                ('voucher_details', models.TextField(blank=True, null=True)),
                ('product_details', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('banner', models.ImageField(upload_to='contest_banners/')),
                ('video', models.FileField(blank=True, null=True, upload_to='contest_videos/')),
                ('daily_limit', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MilestoneType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('payout', models.FloatField()),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ques3.milestonetype')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('income', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('referred_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_source', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_referrals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('reward_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostbackLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payload', models.JSONField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ques3.task')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=20)),
                ('contact_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('dob', models.DateField()),
                ('blood_group', models.CharField(max_length=5)),
                ('emergency_contact', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('area', models.CharField(max_length=100)),
                ('pin', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('work_status', models.CharField(max_length=50)),
                ('profession', models.CharField(max_length=100)),
                ('experience_years', models.IntegerField()),
                ('annual_income', models.FloatField()),
                ('company', models.CharField(max_length=100)),
                ('industry', models.CharField(max_length=100)),
                ('highest_qualification', models.CharField(max_length=100)),
                ('institute_name', models.CharField(max_length=255)),
                ('education_type', models.CharField(max_length=100)),
                ('board_university', models.CharField(max_length=255)),
                ('bank_name', models.CharField(max_length=100)),
                ('card_type', models.CharField(max_length=100)),
                ('upi_id', models.CharField(blank=True, max_length=100, null=True)),
                ('credit_score', models.IntegerField(blank=True, null=True)),
                ('family_members', models.JSONField(default=list)),
                ('primary_language', models.CharField(max_length=100)),
                ('secondary_language', models.CharField(max_length=100)),
                ('proficiency_level', models.CharField(max_length=100)),
                ('open_to_travel', models.BooleanField(default=False)),
                ('vehicle_type', models.CharField(max_length=100)),
                ('vehicle_brand', models.CharField(max_length=100)),
                ('purchase_year', models.IntegerField()),
                ('smoking_habit', models.CharField(max_length=100)),
                ('alcohol_use', models.CharField(max_length=100)),
                ('physical_activity', models.CharField(max_length=100)),
                ('diet', models.CharField(max_length=100)),
                ('illness', models.TextField(blank=True, null=True)),
                ('medications', models.TextField(blank=True, null=True)),
                ('skills', models.TextField(blank=True, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('smart_rank_score', models.IntegerField(default=0)),
                ('referral_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
